version: '3.8'  # Docker Compose 파일 버전

services:
  ############################################################
  # 1. Etcd (Milvus 메타데이터 저장소)
  ############################################################
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      ETCD_AUTO_COMPACTION_MODE: revision        # 자동 압축 모드
      ETCD_AUTO_COMPACTION_RETENTION: "1000"     # 유지할 revision 개수
      ETCD_QUOTA_BACKEND_BYTES: "4294967296"     # 최대 용량 (4GB)
      ETCD_SNAPSHOT_COUNT: "50000"               # 몇 개 revision마다 스냅샷 생성
    volumes:
      - ./database/etcd:/etcd-data               # Etcd 데이터 영속화
    command: >
      etcd -advertise-client-urls=http://127.0.0.1:2379
           -listen-client-urls=http://0.0.0.0:2379
           -data-dir=/etcd-data
    ports:
      - "2379:2379"  # Etcd 포트

  ############################################################
  # 2. MinIO (Milvus 벡터/메타 데이터 저장소)
  ############################################################
  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2024-01-05T22-17-24Z
    environment:
      MINIO_ROOT_USER: minioadmin          # 관리자 아이디
      MINIO_ROOT_PASSWORD: minioadmin      # 관리자 비밀번호
    volumes:
      - ./database/minio:/data             # MinIO 데이터 영속화
    command: server /data --console-address ":9001"  # 웹 콘솔 포트 설정
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO 웹 콘솔

  ############################################################
  # 3. Milvus (Standalone)
  ############################################################
  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.4.0
    command: ["milvus", "run", "standalone"]
    environment:
      # Etcd와 MinIO 연결 설정
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000

      # ===================== 인증 설정 =======================
      MILVUS_ENABLE_AUTH: "true"             # 인증 기능 활성화
      MILVUS_ROOT_USERNAME: "root"           # 관리자 계정
      MILVUS_ROOT_PASSWORD: "mysecurepassword" # 관리자 비밀번호
      # ======================================================

    volumes:
      - ./database/milvus:/var/lib/milvus    # Milvus 내부 데이터 영속화

    ports:
      - "19530:19530"  # gRPC (Python SDK 등 클라이언트 접속)
      - "9091:9091"    # REST API

    depends_on:
      - etcd
      - minio

    restart: unless-stopped

  ############################################################
  # 4. Attu (Milvus 관리용 Web UI)
  ############################################################
  attu:
    container_name: attu
    image: zilliz/attu:latest
    ports:
      - "8000:3000"  # 호스트:컨테이너 (http://localhost:8000)
    environment:
      MILVUS_URL: milvus-standalone:19530    # Milvus 서버 주소
    depends_on:
      - standalone
    restart: unless-stopped

############################################################
# 디렉토리 구조
# ├── docker-compose.yml
# └── database/
#     ├── etcd/     # etcd 데이터
#     ├── minio/    # MinIO 데이터
#     └── milvus/   # Milvus 데이터
#
# 접속 정보:
# - MinIO 웹 콘솔:  http://localhost:9001
#   ID: minioadmin / PW: minioadmin
#
# - Milvus gRPC:    localhost:19530
# - Milvus REST API: http://localhost:9091
# - Attu Web UI:    http://localhost:8000
############################################################
